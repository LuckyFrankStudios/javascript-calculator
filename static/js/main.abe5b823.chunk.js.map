{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","expression","setExpression","answer","setAnswer","display","symbol","prev","clear","del","prevExpression","split","slice","length","join","equal","eval","classsName","className","id","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"y0BAIA,SAASA,MAEP,oBAAoCC,6CAAMC,SAAS,IAAnD,6LAAOC,WAAP,oBAAmBC,cAAnB,oBACA,iBAA4BH,6CAAMC,SAAS,GAA3C,8LAAOG,OAAP,oBAAeC,UAAf,oBAEMC,QAAU,SAACC,GACfJ,eAAc,SAACK,GAAD,OAAUA,EAAOD,MAG3BE,MAAQ,WACZN,eAAc,iBAAM,MACpBE,WAAU,kBAAM,MAGdK,IAAM,WACVP,eAAc,SAACQ,GAAD,OAAoBA,EAAeC,MAAM,IAAIC,MAAM,EAAGF,EAAeG,OAAS,GAC7FC,KAAK,QAEAC,MAAQ,SAARA,QACJX,WAAU,kBAAMY,KAAKf,eACrBC,eAAc,SAACK,GAAD,MAAiB,OAG/B,OACE,kEAAKU,WAAW,YAAhB,SACC,mEAAKC,UAAY,iBAAjB,UACA,kEAAKC,GAAK,UAAUD,UAAY,UAAhC,SAA2CjB,aAC3C,kEAAKiB,UAAY,SAAjB,SAA2Bf,SACzB,kEAAKgB,GAAK,QAAQC,QAAW,kBAAMZ,SAASU,UAAY,mBAAxD,eACA,kEAAKE,QAAW,kBAAMX,OAAOS,UAAY,oBAAzC,gBACA,kEAAKE,QAAW,kBAAMf,QAAQ,MAAMa,UAAY,iBAAhD,eACA,kEAAKC,GAAK,WAAWC,QAAW,kBAAMf,QAAQ,MAAMa,UAAY,0BAAhE,eACA,kEAAKC,GAAK,QAAQC,QAAW,kBAAMf,QAAQ,MAAMa,UAAY,uBAA7D,eACA,kEAAKC,GAAK,QAAQC,QAAW,kBAAMf,QAAQ,MAAMa,UAAY,uBAA7D,eACA,kEAAKC,GAAK,OAAOC,QAAW,kBAAMf,QAAQ,MAAMa,UAAY,sBAA5D,eACA,kEAAKC,GAAK,WAAWC,QAAW,kBAAMf,QAAQ,MAAMa,UAAY,uBAAhE,eACA,kEAAKC,GAAK,OAAOC,QAAW,kBAAMf,QAAQ,MAAMa,UAAY,sBAA5D,eACA,kEAAKC,GAAK,OAAOC,QAAW,kBAAMf,QAAQ,MAAMa,UAAY,sBAA5D,eACA,kEAAKC,GAAK,MAAMC,QAAW,kBAAMf,QAAQ,MAAMa,UAAY,qBAA3D,eACA,kEAAKC,GAAK,MAAMC,QAAW,kBAAMf,QAAQ,MAAMa,UAAY,sBAA3D,eACA,kEAAKC,GAAK,MAAMC,QAAW,kBAAMf,QAAQ,MAAMa,UAAY,qBAA3D,eACA,kEAAKC,GAAK,MAAMC,QAAW,kBAAMf,QAAQ,MAAMa,UAAY,qBAA3D,eACA,kEAAKC,GAAK,QAAQC,QAAW,kBAAMf,QAAQ,MAAMa,UAAY,uBAA7D,eACA,kEAAKC,GAAK,SAASC,QAAW,kBAAML,SAASG,UAAY,uBAAzD,eACA,kEAAKC,GAAK,OAAOC,QAAW,kBAAMf,QAAQ,MAAMa,UAAY,sBAA5D,eACA,kEAAKC,GAAK,UAAUC,QAAW,kBAAMf,QAAQ,MAAMa,UAAY,qBAA/D,oBAOQpB,2B,gIC5CAuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAClC,EAAA,EAAD,MAEFmC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.abe5b823.chunk.js","sourcesContent":["\nimport './App.css';\nimport React, {useState} from 'react';\n\nfunction App() {\n\n  const [expression, setExpression] = React.useState(\"\")\n  const [answer, setAnswer] = React.useState(0)\n\n  const display = (symbol) => {\n    setExpression((prev) => prev + symbol)\n  }\n\n  const clear = () => {\n    setExpression(() => \"\")\n    setAnswer(() => 0)\n  }\n\nconst del = () => {\n  setExpression((prevExpression) => prevExpression.split(\"\").slice(0, prevExpression.length - 1)\n.join(\"\"))}\n\nconst equal = () => {\n  setAnswer(() => eval(expression));\n  setExpression((prev) => prev = \"\")\n}\n\n  return (\n    <div classsName=\"container\">\n     <div className = \"grid-container\">\n     <div id = \"display\" className = \"display\">{expression}</div>\n     <div className = \"answer\">{answer}</div>\n       <div id = \"clear\" onClick = {() => clear()} className = \"C btn btnprimary\">C</div>\n       <div onClick = {() => del()} className = \"AC btn btnprimary\">AC</div>\n       <div onClick = {() => display(\"/\")} className = \"btn btnprimary\">/</div>\n       <div id = \"multiply\" onClick = {() => display(\"*\")} className = \"multiply btn btnprimary\">x</div>\n       <div id = \"seven\" onClick = {() => display(\"7\")} className = \"seven btn btnprimary\">7</div>\n       <div id = \"eight\" onClick = {() => display(\"8\")} className = \"eight btn btnprimary\">8</div>\n       <div id = \"nine\" onClick = {() => display(\"9\")} className = \"nine btn btnprimary\">9</div>\n       <div id = \"subtract\" onClick = {() => display(\"-\")} className = \"minus btn btnprimary\">-</div>\n       <div id = \"four\" onClick = {() => display(\"4\")} className = \"four btn btnprimary\">4</div>\n       <div id = \"five\" onClick = {() => display(\"5\")} className = \"five btn btnprimary\">5</div>\n       <div id = \"six\" onClick = {() => display(\"6\")} className = \"six btn btnprimary\">6</div>\n       <div id = \"add\" onClick = {() => display(\"+\")} className = \"plus btn btnprimary\">+</div>\n       <div id = \"one\" onClick = {() => display(\"1\")} className = \"one btn btnprimary\">1</div>\n       <div id = \"two\" onClick = {() => display(\"2\")} className = \"two btn btnprimary\">2</div>\n       <div id = \"three\" onClick = {() => display(\"3\")} className = \"three btn btnprimary\">3</div>\n       <div id = \"equals\" onClick = {() => equal()} className = \"equal btn btnprimary\">=</div>\n       <div id = \"zero\" onClick = {() => display(\"0\")} className = \"zero btn btnprimary\">0</div>\n       <div id = \"decimal\" onClick = {() => display(\".\")} className = \"dot btn btnprimary\">.</div>\n        \n     </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}